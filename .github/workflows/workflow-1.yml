
name: CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  workflow_dispatch:

jobs:

  build-and-push:

    runs-on: ubuntu-latest

    steps:
      
      - name: Checkout code (like git clone)
        uses: actions/checkout@v3 

      - name: Get commit hash
        id: get_commit_hash
        run: echo "::set-output name=COMMIT_HASH::$(git rev-parse --short HEAD)"

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Image to DockerHub 
        env:
            COMMIT_HASH: ${{ steps.get_commit_hash.outputs.COMMIT_HASH }}
        run: |

         docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ vars.IMAGE_NAME }}:$COMMIT_HASH .
         docker push ${{ secrets.DOCKER_USERNAME }}/${{ vars.IMAGE_NAME }}:$COMMIT_HASH

         docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ vars.IMAGE_NAME }}:latest .
         docker push ${{ secrets.DOCKER_USERNAME }}/${{ vars.IMAGE_NAME }}:latest


  deploy-to-ec2: 

    runs-on: ubuntu-latest

    needs: build-and-push

    steps:
      
    - name: Deploy to EC2 AWS
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_PRIVATE_KEY }}
        script: |
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/${{ vars.IMAGE_NAME }}:latest
            sudo docker stop nodejs-container 
            sudo docker rm nodejs-container 
            sudo docker run -d --name nodejs-container -p 3001:3000 ${{ secrets.DOCKER_USERNAME }}/${{ vars.IMAGE_NAME }}:latest